// <auto-generated />
using Catalog.API.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Catalog.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230224113256_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("catalog_category_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_consumer_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_product_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_product_variant_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("ConsumerProduct", b =>
                {
                    b.Property<int>("ConsumersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("ConsumersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CatalogConsumerCatalogProduct", (string)null);
                });

            modelBuilder.Entity("Shared.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_category_hilo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("CatalogCategory", (string)null);
                });

            modelBuilder.Entity("Shared.Data.Entities.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_consumer_hilo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("CatalogConsumer", (string)null);
                });

            modelBuilder.Entity("Shared.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_product_hilo");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PictureFileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CatalogProduct", (string)null);
                });

            modelBuilder.Entity("Shared.Data.Entities.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_product_variant_hilo");

                    b.Property<int>("AvailableStock")
                        .HasColumnType("integer");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CatalogProductVariant", (string)null);
                });

            modelBuilder.Entity("Shared.Data.Entities.ProductVariantPicture", b =>
                {
                    b.Property<int>("ProductVariantId")
                        .HasColumnType("integer");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("ProductVariantId", "PictureFileName");

                    b.ToTable("CatalogProductVariantPictures", (string)null);
                });

            modelBuilder.Entity("ConsumerProduct", b =>
                {
                    b.HasOne("Shared.Data.Entities.Consumer", null)
                        .WithMany()
                        .HasForeignKey("ConsumersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Data.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Data.Entities.Product", b =>
                {
                    b.HasOne("Shared.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shared.Data.Entities.ProductVariant", b =>
                {
                    b.HasOne("Shared.Data.Entities.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shared.Data.Entities.ProductVariantPicture", b =>
                {
                    b.HasOne("Shared.Data.Entities.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantPicture")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("Shared.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shared.Data.Entities.Product", b =>
                {
                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("Shared.Data.Entities.ProductVariant", b =>
                {
                    b.Navigation("ProductVariantPicture");
                });
#pragma warning restore 612, 618
        }
    }
}
